import * as React from 'react';
import Script from 'next/script';
import {createTheme} from '@mui/material';
import {Inter} from 'next/font/google';

import ThemeRegistry from './__components/theme-registry';
import {ColorModeContext} from './__utils/contexts';
import './globals.css';

const inter = Inter({subsets: ['latin']});

export const metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

const defaultTheme = createTheme({
    palette: {
        contrastThreshold: 4,
        tonalOffset: .6,
        
    }
})

function getTheme(mode) {
    return {
        palette: {
            mode,
            ...(mode === 'light'? {
                primary: theme.palette.augmentColor({

                }),
                secondary: theme.palette.augmentColor({
                    
                }),
                error: theme.palette.augmentColor({
                    
                }),
                warning: theme.palette.augmentColor({
                    
                }),
                info: theme.palette.augmentColor({
                    
                }),
                success: theme.palette.augmentColor({
                    
                }),
            } : {
                primary: theme.palette.augmentColor({

                }),
                secondary: theme.palette.augmentColor({
                    
                }),
                error: theme.palette.augmentColor({
                    
                }),
                warning: theme.palette.augmentColor({
                    
                }),
                info: theme.palette.augmentColor({
                    
                }),
                success: theme.palette.augmentColor({
                    
                }),
            }),
        }
    }
}

export default function RootLayout({ children }) {
    const [mode, setMode] = React.useState('light');
    const colorMode = React.useMemo(() => ({
        toggleColorMode: () => setMode(prevMode => prevMode === 'light'? 'dark' : 'light')
    }), []);

    const theme = React.useMemo(() => createTheme(defaultTheme, getTheme(mode)), [mode]);
    return (
        <html lang="en">
            <body className={inter.className}>
                <ColorModeContext.Provider value={colorMode}>
                    <ThemeRegistry theme={theme} options={{key: 'mui'}}>
                        {children}
                    </ThemeRegistry>
                </ColorModeContext.Provider>
                <Script src="https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js" />
            </body>
        </html>
    )
}